Map / Sets

Map<Class,Class> map = new HashMap<Class,Class>();
Person p1 = new Person("Bob") ..... Person p5 = new Person("Sue")


Map<Person,Integer> map = new HashMap<Person,Integer>();
map.put(p1, 13); 
map.put(p2, 201);
...
map.put(p5, 100);


public class Maps {

	public static void testMap(Map<Integer,String> map){
		
		map.put(9, "Fox"); 
		map.put(6, "Cat"); 
		map.put(3, "Snake"); 
		map.put(0, "Albatross"); 
		map.put(10, "Aliigator"); 
		
		for (Map.Entry<Integer, String> entry : map.entrySet()){
			int key = entry.getKey();
			String value = entry.getValue();
			System.out.println(key + ": " + value);
		}
	}
	
	public static void main(String[] args) {		
		
		Maps obj = new Maps(); 
		System.out.println("HashMap does not guarantee ");
		obj.testMap(new HashMap<Integer,String>());
		System.out.println("----TreeMap sorting keys in natural order (natural order)----");
		obj.testMap(new TreeMap<Integer,String>());
		System.out.println("----LinkedHashMap maintains order that you put things in----");
		obj.testMap(new LinkedHashMap<Integer,String>());
		
		
		
	}
	
	
}